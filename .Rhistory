# R options
options(
htmltools.dir.version = FALSE,
dplyr.print_min = 6,
dplyr.print_max = 6,
tibble.width = 65,
width = 65
)
# figure height, width, dpi
knitr::opts_chunk$set(echo = TRUE,
fig.width = 8,
fig.asp = 0.618,
out.width = "60%",
fig.align = "center",
dpi = 300,
message = FALSE)
# ggplot2
ggplot2::theme_set(ggplot2::theme_gray(base_size = 16))
# set seed
set.seed(1234)
# fontawesome
htmltools::tagList(rmarkdown::html_dependency_font_awesome())
# magick
dev.off <- function(){
invisible(grDevices::dev.off())
}
# devtools
if (!require("devtools")) install.packages("devtools")
library(devtools)
# devtools
if (!require("xaringanthemer")) install.packages("xaringanthemer")
library(xaringanthemer)
# countdown
if (!require("countdown")) devtools::install_github("gadenbuie/countdown")
library(countdown)
# conflicted
if (!require("conflicted")) install.packages("conflicted")
library(conflicted)
conflict_prefer("filter", "dplyr")
# xaringanExtra
if (!require("xaringanExtra")) devtools::install_github("gadenbuie/xaringanExtra")
library(xaringanExtra)
xaringanExtra::use_panelset()
# output number of lines
hook_output <- knitr::knit_hooks$get("output")
knitr::knit_hooks$set(output = function(x, options) {
lines <- options$output.lines
if (is.null(lines)) {
return(hook_output(x, options))  # pass to default hook
}
x <- unlist(strsplit(x, "\n"))
more <- "..."
if (length(lines)==1) {        # first n lines
if (length(x) > lines) {
# truncate the output, but add ....
x <- c(head(x, lines), more)
}
} else {
x <- c(more, x[lines], more)
}
# paste these lines together
x <- paste(c(x, ""), collapse = "\n")
hook_output(x, options)
})
if (!require("emo")) devtools::install_github("hadley/emo")
library(emo)
if (!require("xaringanthemer")) devtools::install_github("xaringanthemer")
library(xaringanthemer)
knitr::include_graphics("../website/static/images/assessments/calender.png")
knitr::include_graphics("~/GitHub/ids-s1-21/website/static/images/assessments/calender.png")
knitr::include_graphics("../website/static/images/assessments/calender.png")
getwd()
here::i_am()
here::i_am("week-01//w1-d03-course-information/w1-d03-course-information.Rmd")
knitr::include_graphics(here("../../website/static/images/assessments/calender.png"))
library(here)
knitr::include_graphics(here("../../website/static/images/assessments/calender.png"))
here::i_am("week-01//w1-d03-course-information/w1-d03-course-information.Rmd")
library(here)
knitr::include_graphics(here("./website/static/images/assessments/calender.png"))
knitr::include_graphics(here("../website/static/images/assessments/calender.png"))
knitr::include_graphics("libs/../website/static/images/assessments/calender.png")
knitr::include_graphics("libs/../../website/static/images/assessments/calender.png")
knitr::include_graphics("libs/../../../website/static/images/assessments/calender.png")
?xaringan::moon_reader
knitr::include_graphics("../../../../website/static/images/assessments/calender.png")
knitr::include_graphics("/libs/../../../website/static/images/assessments/calender.png")
here::i_am("week-01/w1-d03-course-information/w1-d03-course-information.Rmd")
library(here)
knitr::include_graphics(here("../website/static/images/assessments/calender.png"))
knitr::include_graphics("/libs/../../../website/static/images/assessments/calender.png")
here::i_am("week-01/w1-d03-course-information/w1-d03-course-information.Rmd")
library(here)
knitr::include_graphics(here("calender.png"))
knitr::include_graphics(here("week-01/w1-d03-course-information/calender.png"))
setwd("~/GitHub/ids-s1-21/slides/week-01/w1-d03-course-information")
here::i_am("week-01/w1-d03-course-information/w1-d03-course-information.Rmd")
#here::i_am("week-01/w1-d03-course-information/w1-d03-course-information.Rmd")
#library(here)
#knitr::include_graphics(here("calender.png"))
knitr::include_graphics("calender.png")
.pull-left-wide[
- We have all had a very tough/different year and things may continue to be a bit different
knitr::include_url("https://idsed.digital/")
knitr::include_url("https://idsed.digital/")
install.packages("webshot")
install.packages("PhantomJS")
webshot::install_phantomjs()
knitr::include_url("https://idsed.digital/")
library(tidyverse)
library(viridis)
library(sugrrants)
library(lubridate)
library(webshot)
knitr::include_url("https://idsed.digital/")
knitr::include_url("https://idsed.digital/")
knitr::include_graphics("img/idsed.PNG")
knitr::include_graphics("img/learn.PNG")
```
knitr::include_graphics("img/learn.PNG")
```
knitr::include_graphics("img/learn.PNG")
```
knitr::include_graphics("img/learn.PNG")
install.packages(janitor)
install.packages("janitor")
install_github("mine-cetinkaya-rundel/nycsquirrels18")
library(devtools)
install_github("mine-cetinkaya-rundel/nycsquirrels18")
#library(devtools)
#install_github("mine-cetinkaya-rundel/nycsquirrels18")
library(nycsquirrels18)
library(tidyverse)
library(tidymodels)
library(gghighlight)
library(knitr)
set.seed(1234)
office_ratings <- read_csv("data/office_ratings.csv")
office_ratings
ggplot(office_ratings, aes(x = imdb_rating)) +
geom_histogram(binwidth = 0.25) +
labs(
title = "The Office ratings",
x = "IMDB Rating"
)
ggplot(office_ratings, aes(x = total_votes, y = imdb_rating, color = season)) +
geom_jitter(alpha = 0.7) +
labs(
title = "The Office ratings",
x = "Total votes",
y = "IMDB Rating",
color = "Season"
)
ggplot(office_ratings, aes(x = total_votes, y = imdb_rating)) +
geom_jitter() +
gghighlight(total_votes > 4000, label_key = title) +
labs(
title = "The Office ratings",
x = "Total votes",
y = "IMDB Rating"
)
ggplot(office_ratings, aes(x = factor(season), y = imdb_rating, color = season)) +
geom_boxplot() +
geom_jitter() +
guides(color = FALSE) +
labs(
title = "The Office ratings",
x = "Season",
y = "IMDB Rating"
)
set.seed(1122)
office_split <- initial_split(office_ratings) # prop = 3/4 by default
office_train <- training(office_split)
dim(office_train)
office_test  <- testing(office_split)
dim(office_test)
office_mod <- linear_reg() %>%
set_engine("lm")
office_mod
office_rec <- recipe(imdb_rating ~ ., data = office_train) %>%
# title isn't a predictor, but keep around to ID
update_role(title, new_role = "ID") %>%
# extract month of air_date
step_date(air_date, features = "month") %>%
step_rm(air_date) %>%
# make dummy variables of month
step_dummy(contains("month")) %>%
# remove zero variance predictors
step_zv(all_predictors())
office_rec
office_wflow <- workflow() %>%
add_model(office_mod) %>%
add_recipe(office_rec)
office_wflow
office_fit <- office_wflow %>%
fit(data = office_train)
tidy(office_fit) %>%
print(n = 12)
office_train_pred <- predict(office_fit, office_train) %>%
bind_cols(office_train %>% select(imdb_rating, title))
office_train_pred
rsq(office_train_pred, truth = imdb_rating, estimate = .pred)
rmse(office_train_pred, truth = imdb_rating, estimate = .pred)
office_train %>%
summarise(min = min(imdb_rating), max = max(imdb_rating))
office_test_pred <- predict(office_fit, office_test) %>%
bind_cols(office_test %>% select(imdb_rating, title))
office_test_pred
rmse(office_test_pred, truth = imdb_rating, estimate = .pred)
rsq(office_test_pred, truth = imdb_rating, estimate = .pred)
rmse_train <- rmse(office_train_pred, truth = imdb_rating, estimate = .pred) %>%
pull(.estimate) %>%
round(3)
rsq_train <- rsq(office_train_pred, truth = imdb_rating, estimate = .pred) %>%
pull(.estimate) %>%
round(3)
rmse_test <- rmse(office_test_pred, truth = imdb_rating, estimate = .pred) %>%
pull(.estimate) %>%
round(3)
rsq_test <- rsq(office_test_pred, truth = imdb_rating, estimate = .pred) %>%
pull(.estimate) %>%
round(3)
tibble(
data      = c(rep("train", 2), rep("test", 2)),
estimate  = c(rmse_train, rsq_train, rmse_test, rsq_test),
metric    = c("RMSE", "R-squared", "RMSE", "R-squared")
) %>%
pivot_wider(names_from = data, values_from = estimate) %>%
bind_cols(comparison = c("RMSE lower for training", "R-squared higher for training")) %>%
kable()
knitr::include_graphics("img/cross-validation.png")
set.seed(345)
folds <- vfold_cv(office_train, v = 5)
folds
knitr::include_graphics("img/cross-validation.png")
set.seed(456)
office_fit_rs <- office_wflow %>%
fit_resamples(folds)
office_fit_rs
knitr::include_graphics("img/cross-validation-animated.gif")
collect_metrics(office_fit_rs)
collect_metrics(office_fit_rs, summarize = FALSE) %>%
print(n = 10)
collect_metrics(office_fit_rs, summarize = FALSE) %>%
select(id, .metric, .estimate) %>%
pivot_wider(names_from = .metric, values_from = .estimate) %>%
kable(col.names = c("Fold", "RMSE", "R-squared"), digits = 3)
collect_metrics(office_fit_rs, summarize = FALSE) %>%
filter(.metric == "rmse") %>%
summarise(
min = min(.estimate),
max = max(.estimate),
mean = mean(.estimate),
med = median(.estimate),
sd = sd(.estimate),
IQR = IQR(.estimate)
)
office_train %>%
summarise(
min = min(imdb_rating),
max = max(imdb_rating),
mean = mean(imdb_rating),
med = median(imdb_rating),
sd = sd(imdb_rating),
IQR = IQR(imdb_rating)
)
knitr::include_graphics("img/post-cv-testing.png")
